{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jacqu\\\\Desktop\\\\CodeTherapy\\\\Likewise\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n//firebase API\nimport fireBase from './firebase-config';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from 'firebase/auth'; //Routing libs\n\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from \"react-router-dom\"; //Page components\n\nimport Login from \"./view/pages/Login\";\nimport Register from \"./view/pages/Register\";\nimport Home from \"./view/pages/Home\";\nimport Onboard from './view/pages/Onboard';\nimport EventRooms from \"./view/pages/EventRooms\";\nimport EventRoom from \"./view/pages/EventRoom\";\nimport MyRooms from \"./view/pages/MyRooms\";\nimport ActivityRooms from \"./view/pages/ActivityRooms\";\nimport Profile from \"./view/pages/Profile\"; //Hooks\n\nimport { useEffect, useState } from 'react'; //Toast\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify'; // Need to place the authentication functions in controller classes later on to decouple presentation and logic\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  let navigate = useNavigate();\n\n  const handleLogin = () => {\n    const authentication = getAuth();\n    signInWithEmailAndPassword(authentication, email, password).then(response => {\n      sessionStorage.setItem('Auth Token', response._tokenResponse.refreshToken);\n      navigate('/Home');\n    }).catch(error => {\n      console.log(error);\n\n      if (error.code === 'auth/wrong-password') {\n        toast.error('Please check the Password');\n      }\n\n      if (error.code === 'auth/invalid-email') {\n        toast.error('Please check the Email');\n      }\n\n      if (error.code === 'auth/internal-error') {\n        toast.error('Please enter both Email and Password');\n      }\n    });\n  };\n\n  const handleRegister = () => {\n    const authentication = getAuth();\n    console.log(email);\n    console.log(password);\n    createUserWithEmailAndPassword(authentication, email, password).then(response => {\n      console.log(response);\n      toast('Please verify your Email address');\n    }).catch(error => {\n      console.log(error);\n\n      if (error.code === 'auth/wrong-password') {\n        toast.error('Please check the Password');\n      }\n\n      if (error.code === 'auth/invalid-email') {\n        toast.error('Please check the Email');\n      }\n\n      if (error.code === 'auth/internal-error') {\n        toast.error('Please enter both Email and Password');\n      }\n\n      if (error.code === 'auth/email-already-in-use') {\n        toast.error('Email already in use. Please try to login.');\n      }\n    });\n  };\n\n  useEffect(() => {\n    let authToken = sessionStorage.getItem('Auth Token');\n\n    if (authToken) {\n      navigate('/home');\n    }\n\n    if (!authToken) {\n      navigate('/Login');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Onboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 38\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"Login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            setEmail: setEmail,\n            setPassword: setPassword,\n            handleAction: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"Register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            setEmail: setEmail,\n            setPassword: setPassword,\n            handleAction: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 42\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"ActivityRooms\",\n          element: /*#__PURE__*/_jsxDEV(ActivityRooms, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"EventRooms\",\n          element: /*#__PURE__*/_jsxDEV(EventRooms, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"EventRoom\",\n          element: /*#__PURE__*/_jsxDEV(EventRoom, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"MyRooms\",\n          element: /*#__PURE__*/_jsxDEV(MyRooms, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"Profile\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"P8N6aOEN8VF4cvKL87x4xkvKyJc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["fireBase","getAuth","signInWithEmailAndPassword","createUserWithEmailAndPassword","BrowserRouter","Router","Route","Routes","useNavigate","Login","Register","Home","Onboard","EventRooms","EventRoom","MyRooms","ActivityRooms","Profile","useEffect","useState","ToastContainer","toast","App","email","setEmail","password","setPassword","navigate","handleLogin","authentication","then","response","sessionStorage","setItem","_tokenResponse","refreshToken","catch","error","console","log","code","handleRegister","authToken","getItem"],"sources":["C:/Users/jacqu/Desktop/CodeTherapy/Likewise/src/App.js"],"sourcesContent":["//firebase API\r\nimport fireBase from './firebase-config'\r\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from 'firebase/auth'\r\n\r\n//Routing libs\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Routes,\r\n  useNavigate\r\n} from \"react-router-dom\";\r\n\r\n//Page components\r\nimport Login from \"./view/pages/Login\";\r\nimport Register from \"./view/pages/Register\";\r\nimport Home from \"./view/pages/Home\";\r\nimport Onboard from './view/pages/Onboard';\r\n\r\nimport EventRooms from \"./view/pages/EventRooms\";\r\nimport EventRoom from \"./view/pages/EventRoom\";\r\n\r\nimport MyRooms from \"./view/pages/MyRooms\";\r\nimport ActivityRooms from \"./view/pages/ActivityRooms\";\r\nimport Profile from \"./view/pages/Profile\";\r\n\r\n//Hooks\r\nimport { useEffect, useState } from 'react';\r\n\r\n//Toast\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n// Need to place the authentication functions in controller classes later on to decouple presentation and logic\r\nconst App = () =>{\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  let navigate=useNavigate();\r\n\r\n  const handleLogin = () =>{\r\n    const authentication = getAuth();\r\n    signInWithEmailAndPassword(authentication, email, password)\r\n        .then((response) => {\r\n          sessionStorage.setItem('Auth Token', response._tokenResponse.refreshToken);\r\n          navigate('/Home');\r\n        }).catch((error) => {\r\n          console.log(error)\r\n          if(error.code === 'auth/wrong-password'){\r\n            toast.error('Please check the Password');\r\n          }\r\n          if(error.code === 'auth/invalid-email'){\r\n            toast.error('Please check the Email');\r\n          }\r\n          if (error.code ==='auth/internal-error'){\r\n            toast.error('Please enter both Email and Password');\r\n          }\r\n        })\r\n  }\r\n\r\n  const handleRegister = () => {\r\n    const authentication = getAuth();\r\n    console.log(email);\r\n    console.log(password);\r\n    createUserWithEmailAndPassword(authentication, email, password)\r\n    .then((response)=>\r\n    {console.log(response);\r\n  toast('Please verify your Email address')}).catch((error) => {\r\n      console.log(error)\r\n      if(error.code === 'auth/wrong-password'){\r\n        toast.error('Please check the Password');\r\n      }\r\n      if(error.code === 'auth/invalid-email'){\r\n        toast.error('Please check the Email');\r\n      }\r\n      if (error.code ==='auth/internal-error'){\r\n        toast.error('Please enter both Email and Password');\r\n      }\r\n      if (error.code ==='auth/email-already-in-use'){\r\n        toast.error('Email already in use. Please try to login.');\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    let authToken = sessionStorage.getItem('Auth Token')\r\n\r\n    if (authToken) {\r\n        navigate('/home')\r\n    }\r\n\r\n    if (!authToken) {\r\n        navigate('/Login')\r\n    }\r\n  }, [])\r\n  \r\n  \r\n\r\n  return(\r\n      <div className=\"App\">\r\n        <ToastContainer/>\r\n        <Routes>\r\n            <Route path='/' element={<Onboard />}>\r\n              <Route path=\"Login\" element={<Login setEmail={setEmail} setPassword={setPassword} handleAction={handleLogin}/>}/>\r\n              <Route path=\"Register\" element={<Register setEmail={setEmail} setPassword={setPassword} handleAction={handleRegister}/>}/>\r\n            </Route>\r\n            <Route path=\"/Home\" element={<Home />}>\r\n              <Route path=\"ActivityRooms\" element={<ActivityRooms/>}/>\r\n              <Route path=\"EventRooms\" element={<EventRooms/>}/>\r\n              <Route path=\"EventRoom\" element={<EventRoom/>}/>\r\n              <Route path=\"MyRooms\" element={<MyRooms />}/>\r\n              <Route path=\"Profile\" element={<Profile />}/>\r\n            </Route>\r\n        </Routes>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}